@model sys.Models.Quiz.QuizQA
@{
    ViewBag.Title = "Quiz Question/Create";
    Layout = "~/Views/Shared/_LayoutPageTeacher.cshtml";
}

<h3>Add a Question to: @ViewBag.QuizTitle</h3>
<p>@ViewBag.Instructions</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.QuizId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Topic, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Topic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.QuestionText, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.OptionA, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.OptionA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Answer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Marks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Marks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Marks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Difficulty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.Difficulty, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Difficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Explanation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Explanation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Explanation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Question" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Quiz List", "Index", "CreateQs")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
